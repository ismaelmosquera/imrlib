/**
* The imr.sound.audio package provides an audio player supporting the following extensions:
* <ul>
* <li>mp3</li>
* <li>wav</li>
* <li>aif</li>
* <li>au</li>
* </ul>
* <p>
* To have support to load *.mp3 files you must have the 'mp3plugin.jar' file in your classpath.
* <p>
* You can find the 'mp3plugin.jar' file inside the 'ext' folder.
* <p>
* The <code>SoundPlayer</code> in the imr.sound package is multipurpose and also supports playing MIDI files,
* but if you only need an audio player to play single files you can choose this option.
 * It also provides an audio recorder supporting the following extensions:
 * <ul>
 * <li>wav</li>
 * <li>aif</li>
 * <li>au</li>
 * </ul>
 * An instance object of AudioRecorder allows you to record and save audio files
 * for the allowed extensions.
 *
 * There are more useful components:
 *
 * <code>AudioFileIO</code>
 * For audio file storage.
 *
 * <code>RawDataPlayer</code>
 * This class allows you to play raw data.
 * For example, data generated by an imr.sound.audio.synthesis.oscillator.
 *
 * <code>RawDataStorage</code>
 * Using this class, you are able to store raw data in an audio file.
 *
 * <code>FrameFactory</code>
 * This class is useful to generate empty data frames with a concrete duration.
 *
 * <code>AudioMixer</code>
 * This class allows you to mix any number of tracks into only one.
 * That is: input = n-tracks; output = one mixed track.
 * <p>
 * Some classes in this package use assertions. so, you have to run them with the 'ea' modifier
 * which enables assertions.
 * Example:
 * <code>java -ea MyApp</code>
 *
 * @author Ismael Mosquera Rivera
 *
*/

package imr.sound.audio;
